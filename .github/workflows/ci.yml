name: dank-formal unit tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Cache Solvers and Yosys
      id: cache
      uses: actions/cache@v2
      with:
        path: ext/bin
        key: ${{ runner.os }}-build-${{ hashFiles('ext/*.sh') }}-0

    - name: yices
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: ext
      run: ./yices.sh

    - name: cvc4
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: ext
      run: ./cvc4.sh

    - name: btor
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: ext
      run: ./btor.sh

    - name: z3
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: ext
      run: ./z3.sh

    - name: yosys
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: ext
      run: ./yosys.sh

    - name: Move Binaries to Common Dir
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p ext/bin
        cp ext/bin-yices/* ext/bin/
        cp ext/lib-yices/* ext/bin/
        cp ext/bin-cvc4/*  ext/bin/
        cp ext/bin-btor/*  ext/bin/
        cp ext/bin-z3/*    ext/bin/
        cp ext/bin-yosys/* ext/bin/
        ls ext/bin/

    - name: Make Binaries Executable
      run: chmod +x $GITHUB_WORKSPACE/ext/bin/*

    - name: Add Binaries To Path
      run: |
        ls $GITHUB_WORKSPACE/ext/bin/
        echo "$GITHUB_WORKSPACE/ext/bin/" >> $GITHUB_PATH
        echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/ext/bin/" >> $GITHUB_ENV

    - name: Print Solver Versions and Paths
      run: |
        echo "Yices"
        yices-smt2 --version
        which yices-smt2
        echo ""
        echo "CVC4"
        cvc4 --version
        which cvc4
        echo ""
        echo "Btormc"
        btormc --version --copyright
        which btormc
        echo ""
        echo "Z3"
        z3 --version
        which z3
        echo ""
        echo "Yosys"
        yosys -version
        which yosys

    - name: Install Verilator
      run: |
        sudo apt-get install -y verilator
        verilator --version

    - name: Install SymbiYosys
      run: |
        git clone https://github.com/YosysHQ/SymbiYosys.git SymbiYosys
        cd SymbiYosys
        sudo make install

    - name: Install Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: openjdk@1.11

    - name: Compile
      run: sbt compile

    - name: Unit Tests
      run: sbt test
